// <auto-generated />
using System;
using DataAccess;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace DataAccess.Migrations
{
    [DbContext(typeof(Context))]
    [Migration("20230830160130_Initial")]
    partial class Initial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Domain.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.HasKey("Id");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Dresses"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Shirts"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Jeans"
                        },
                        new
                        {
                            Id = 4,
                            Name = "Sportwear "
                        },
                        new
                        {
                            Id = 5,
                            Name = "Blazers "
                        },
                        new
                        {
                            Id = 6,
                            Name = "Swimsuit"
                        });
                });

            modelBuilder.Entity("Domain.Order", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("OrderDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("ShippingAddress")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("ShippingCity")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Orders");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            OrderDate = new DateTime(2023, 8, 30, 18, 1, 30, 58, DateTimeKind.Local).AddTicks(9847),
                            Phone = "1230212",
                            Price = 123.99m,
                            ShippingAddress = "Adresa bb",
                            ShippingCity = "Beograd",
                            UserId = 1
                        });
                });

            modelBuilder.Entity("Domain.OrderLine", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("OrderId")
                        .HasColumnType("int");

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<int>("SizeId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("OrderId");

                    b.HasIndex("SizeId", "ProductId");

                    b.ToTable("OrderLines");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            OrderId = 1,
                            ProductId = 1,
                            Quantity = 1,
                            SizeId = 1
                        },
                        new
                        {
                            Id = 2,
                            OrderId = 1,
                            ProductId = 1,
                            Quantity = 1,
                            SizeId = 2
                        },
                        new
                        {
                            Id = 3,
                            OrderId = 1,
                            ProductId = 1,
                            Quantity = 1,
                            SizeId = 3
                        },
                        new
                        {
                            Id = 4,
                            OrderId = 1,
                            ProductId = 3,
                            Quantity = 1,
                            SizeId = 5
                        });
                });

            modelBuilder.Entity("Domain.Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.Property<DateTime>("DateAdded")
                        .HasColumnType("datetime2");

                    b.Property<string>("Image")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CategoryId = 1,
                            DateAdded = new DateTime(2023, 8, 30, 18, 1, 30, 58, DateTimeKind.Local).AddTicks(9773),
                            Image = "dress1-black.jpg",
                            IsDeleted = false,
                            Name = "ASOS DESIGN ultimate midi tea",
                            Price = 29.99m
                        },
                        new
                        {
                            Id = 2,
                            CategoryId = 1,
                            DateAdded = new DateTime(2023, 8, 30, 18, 1, 30, 58, DateTimeKind.Local).AddTicks(9816),
                            Image = "dress2-black.jpg",
                            IsDeleted = false,
                            Name = "ASOS DESIGN ruched racer front",
                            Price = 21.00m
                        },
                        new
                        {
                            Id = 3,
                            CategoryId = 2,
                            DateAdded = new DateTime(2023, 8, 30, 18, 1, 30, 58, DateTimeKind.Local).AddTicks(9819),
                            Image = "shirt1.jpg",
                            IsDeleted = false,
                            Name = "ASOS DESIGN long sleeve blouse",
                            Price = 31.99m
                        },
                        new
                        {
                            Id = 4,
                            CategoryId = 2,
                            DateAdded = new DateTime(2023, 8, 30, 18, 1, 30, 58, DateTimeKind.Local).AddTicks(9821),
                            Image = "shirt2.jpg",
                            IsDeleted = false,
                            Name = "ASOS DESIGN natural crinkle to",
                            Price = 21.99m
                        });
                });

            modelBuilder.Entity("Domain.Size", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Value")
                        .IsRequired()
                        .HasMaxLength(5)
                        .HasColumnType("nvarchar(5)");

                    b.HasKey("Id");

                    b.HasIndex("Value")
                        .IsUnique();

                    b.ToTable("Sizes");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Value = "XS"
                        },
                        new
                        {
                            Id = 2,
                            Value = "S"
                        },
                        new
                        {
                            Id = 3,
                            Value = "M"
                        },
                        new
                        {
                            Id = 4,
                            Value = "L"
                        },
                        new
                        {
                            Id = 5,
                            Value = "XL"
                        },
                        new
                        {
                            Id = 6,
                            Value = "XXL"
                        },
                        new
                        {
                            Id = 7,
                            Value = "XXXL"
                        });
                });

            modelBuilder.Entity("Domain.SizeProduct", b =>
                {
                    b.Property<int>("SizeId")
                        .HasColumnType("int");

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.HasKey("SizeId", "ProductId");

                    b.HasIndex("ProductId");

                    b.ToTable("SizesProducts");

                    b.HasData(
                        new
                        {
                            SizeId = 1,
                            ProductId = 1,
                            Quantity = 10
                        },
                        new
                        {
                            SizeId = 2,
                            ProductId = 1,
                            Quantity = 15
                        },
                        new
                        {
                            SizeId = 3,
                            ProductId = 1,
                            Quantity = 5
                        },
                        new
                        {
                            SizeId = 4,
                            ProductId = 1,
                            Quantity = 6
                        },
                        new
                        {
                            SizeId = 4,
                            ProductId = 3,
                            Quantity = 6
                        },
                        new
                        {
                            SizeId = 5,
                            ProductId = 3,
                            Quantity = 9
                        },
                        new
                        {
                            SizeId = 1,
                            ProductId = 3,
                            Quantity = 0
                        },
                        new
                        {
                            SizeId = 6,
                            ProductId = 4,
                            Quantity = 2
                        },
                        new
                        {
                            SizeId = 2,
                            ProductId = 4,
                            Quantity = 12
                        },
                        new
                        {
                            SizeId = 3,
                            ProductId = 4,
                            Quantity = 10
                        });
                });

            modelBuilder.Entity("Domain.UseCaseLog", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Actor")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Data")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("UseCaseName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("UseCaseLogs");
                });

            modelBuilder.Entity("Domain.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<int>("RoleId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("Email");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Email = "andjela@gmail.com",
                            FirstName = "Andjela",
                            LastName = "Kostic",
                            Password = "pass123",
                            RoleId = 2
                        },
                        new
                        {
                            Id = 2,
                            Email = "luka.lukic@gmail.com",
                            FirstName = "Luka",
                            LastName = "Lukic",
                            Password = "pass123",
                            RoleId = 2
                        });
                });

            modelBuilder.Entity("Domain.UserUseCase", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("UseCaseId")
                        .HasColumnType("int");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("UserUseCases");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            UseCaseId = 1,
                            UserId = 1
                        },
                        new
                        {
                            Id = 2,
                            UseCaseId = 2,
                            UserId = 1
                        },
                        new
                        {
                            Id = 3,
                            UseCaseId = 3,
                            UserId = 1
                        },
                        new
                        {
                            Id = 4,
                            UseCaseId = 4,
                            UserId = 1
                        },
                        new
                        {
                            Id = 5,
                            UseCaseId = 5,
                            UserId = 1
                        },
                        new
                        {
                            Id = 6,
                            UseCaseId = 6,
                            UserId = 1
                        },
                        new
                        {
                            Id = 7,
                            UseCaseId = 7,
                            UserId = 1
                        },
                        new
                        {
                            Id = 8,
                            UseCaseId = 8,
                            UserId = 1
                        },
                        new
                        {
                            Id = 9,
                            UseCaseId = 9,
                            UserId = 1
                        },
                        new
                        {
                            Id = 10,
                            UseCaseId = 10,
                            UserId = 1
                        },
                        new
                        {
                            Id = 11,
                            UseCaseId = 11,
                            UserId = 1
                        },
                        new
                        {
                            Id = 12,
                            UseCaseId = 12,
                            UserId = 1
                        },
                        new
                        {
                            Id = 13,
                            UseCaseId = 13,
                            UserId = 1
                        },
                        new
                        {
                            Id = 14,
                            UseCaseId = 14,
                            UserId = 1
                        },
                        new
                        {
                            Id = 15,
                            UseCaseId = 15,
                            UserId = 1
                        },
                        new
                        {
                            Id = 16,
                            UseCaseId = 16,
                            UserId = 1
                        },
                        new
                        {
                            Id = 17,
                            UseCaseId = 17,
                            UserId = 1
                        },
                        new
                        {
                            Id = 18,
                            UseCaseId = 18,
                            UserId = 1
                        },
                        new
                        {
                            Id = 19,
                            UseCaseId = 19,
                            UserId = 1
                        },
                        new
                        {
                            Id = 20,
                            UseCaseId = 20,
                            UserId = 1
                        },
                        new
                        {
                            Id = 21,
                            UseCaseId = 21,
                            UserId = 1
                        },
                        new
                        {
                            Id = 22,
                            UseCaseId = 22,
                            UserId = 1
                        },
                        new
                        {
                            Id = 23,
                            UseCaseId = 1,
                            UserId = 2
                        },
                        new
                        {
                            Id = 24,
                            UseCaseId = 2,
                            UserId = 2
                        },
                        new
                        {
                            Id = 25,
                            UseCaseId = 3,
                            UserId = 2
                        },
                        new
                        {
                            Id = 26,
                            UseCaseId = 4,
                            UserId = 2
                        },
                        new
                        {
                            Id = 27,
                            UseCaseId = 5,
                            UserId = 2
                        },
                        new
                        {
                            Id = 28,
                            UseCaseId = 6,
                            UserId = 2
                        },
                        new
                        {
                            Id = 29,
                            UseCaseId = 7,
                            UserId = 2
                        },
                        new
                        {
                            Id = 30,
                            UseCaseId = 8,
                            UserId = 2
                        },
                        new
                        {
                            Id = 31,
                            UseCaseId = 9,
                            UserId = 2
                        },
                        new
                        {
                            Id = 32,
                            UseCaseId = 10,
                            UserId = 2
                        },
                        new
                        {
                            Id = 33,
                            UseCaseId = 11,
                            UserId = 2
                        },
                        new
                        {
                            Id = 34,
                            UseCaseId = 12,
                            UserId = 2
                        },
                        new
                        {
                            Id = 35,
                            UseCaseId = 13,
                            UserId = 2
                        },
                        new
                        {
                            Id = 36,
                            UseCaseId = 14,
                            UserId = 2
                        },
                        new
                        {
                            Id = 37,
                            UseCaseId = 15,
                            UserId = 2
                        },
                        new
                        {
                            Id = 38,
                            UseCaseId = 16,
                            UserId = 2
                        },
                        new
                        {
                            Id = 39,
                            UseCaseId = 17,
                            UserId = 2
                        },
                        new
                        {
                            Id = 40,
                            UseCaseId = 18,
                            UserId = 2
                        },
                        new
                        {
                            Id = 41,
                            UseCaseId = 19,
                            UserId = 2
                        },
                        new
                        {
                            Id = 42,
                            UseCaseId = 20,
                            UserId = 2
                        },
                        new
                        {
                            Id = 43,
                            UseCaseId = 21,
                            UserId = 2
                        },
                        new
                        {
                            Id = 44,
                            UseCaseId = 22,
                            UserId = 2
                        });
                });

            modelBuilder.Entity("Domain.Order", b =>
                {
                    b.HasOne("Domain.User", "User")
                        .WithMany("Orders")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("Domain.OrderLine", b =>
                {
                    b.HasOne("Domain.Order", "Order")
                        .WithMany("OrderLines")
                        .HasForeignKey("OrderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Domain.SizeProduct", "SizeProducts")
                        .WithMany("OrderLines")
                        .HasForeignKey("SizeId", "ProductId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Order");

                    b.Navigation("SizeProducts");
                });

            modelBuilder.Entity("Domain.Product", b =>
                {
                    b.HasOne("Domain.Category", "Category")
                        .WithMany("Products")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");
                });

            modelBuilder.Entity("Domain.SizeProduct", b =>
                {
                    b.HasOne("Domain.Product", "Product")
                        .WithMany("SizeProducts")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Domain.Size", "Size")
                        .WithMany("SizeProducts")
                        .HasForeignKey("SizeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Product");

                    b.Navigation("Size");
                });

            modelBuilder.Entity("Domain.UserUseCase", b =>
                {
                    b.HasOne("Domain.User", "User")
                        .WithMany("UserUseCases")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("Domain.Category", b =>
                {
                    b.Navigation("Products");
                });

            modelBuilder.Entity("Domain.Order", b =>
                {
                    b.Navigation("OrderLines");
                });

            modelBuilder.Entity("Domain.Product", b =>
                {
                    b.Navigation("SizeProducts");
                });

            modelBuilder.Entity("Domain.Size", b =>
                {
                    b.Navigation("SizeProducts");
                });

            modelBuilder.Entity("Domain.SizeProduct", b =>
                {
                    b.Navigation("OrderLines");
                });

            modelBuilder.Entity("Domain.User", b =>
                {
                    b.Navigation("Orders");

                    b.Navigation("UserUseCases");
                });
#pragma warning restore 612, 618
        }
    }
}
